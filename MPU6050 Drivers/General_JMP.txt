


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////// Timer Commands ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void interrupts(char on){
	if(on){
		UCB0IE |= (UCRXIE + UCTXIE);
		P1IE |= (BIT2 + BIT3 + BIT4);
	}
	else{
		UCB0IE &= ~(UCRXIE + UCTXIE);
		P1IE &= ~(BIT2 + BIT3 +BIT4);
	}
}
void delay(unsigned long miliSeconds){
	unsigned long operations = (32768*miliSeconds)/1000;
	TB0CTL |= TBCLR; 				// Clear Timer content
	TB0CCR0 = operations;			// Set the timer period
	TB0CTL |= TBSSEL_1;				// Use aclk
	TB0CTL |= MC_1;					// Use up mode

	interrupts(0);					// Disable interrupts
	TB0CCTL0 |= CCIE;				// Enable Interrupt
	__bis_SR_register(GIE + LPM0_bits);	// halt cpu
	interrupts(1);					// Enable interrupts


	return;
}

#pragma vector = TIMER0_B0_VECTOR
__interrupt void TIMER_B0(void){

	TB0CTL &= ~MC_1;				//Stop timer
	TB0CTL |= MC_0;					//Make sure its stopped
	LPM0_EXIT;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////